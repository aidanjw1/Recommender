{"version":3,"sources":["Components/AutoComplete.js","config.js","Components/MovieBox.js","Pages/Home.js","Pages/Movie.js","Components/Layout.js","App.js","index.js"],"names":["AutoComplete","data","onSelect","useState","text","setText","focus","setFocus","length","filter","item","title","toLowerCase","includes","slice","style","width","margin","ClickAwayListener","onClickAway","Input","type","placeholder","fontSize","value","onChange","e","target","onFocus","Paper","position","display","zIndex","List","map","val","i","ListItem","key","onClick","cursor","TMDB_KEY","MovieBox","movie","remove","src","setSrc","useEffect","a","fetch","id","res","json","body","fetchPoster","Card","to","height","CardContent","Button","size","backgroundColor","color","Home","movieList","setMovieList","localStorage","getItem","JSON","parse","myList","setMyList","recs","setRecs","getMovies","method","stringify","ids","headers","fetchRecommendations","setItem","Grid","container","spacing","xs","Container","padding","md","list","_item","removeFromList","Movie","match","setMovie","poster","setPoster","params","fetchMovie","backgroundImage","maxWidth","overflow","rec","Layout","children","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d85bddc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Paper, ListItem, List, Input, ClickAwayListener } from \"@material-ui/core\";\n\n\nconst AutoComplete = ({data, onSelect}) => {\n\n    const [ text, setText ] = useState('');\n    const [ focus, setFocus ] = useState(false);\n    data = text.length < 3? [] : data.filter(item => item.title.toLowerCase().includes(text.toLowerCase())).slice(0, 10)\n\n    function handleClickAway() {\n        setText('');\n        setFocus(false);\n    }\n    function handleClickOn() {\n        setFocus(true);\n    }\n\n    return (\n        <div style={{ width: '50%', margin: 'auto'}}>\n            <ClickAwayListener onClickAway={handleClickAway}>\n                <Input type=\"text\" placeholder={'Search...'}\n                    style={{width: '100%', fontSize: '1.5rem'}}\n                    value={text} \n                    onChange={(e) => setText(e.target.value)} \n                    onFocus={handleClickOn} />\n            </ClickAwayListener>\n            <Paper style={{position: 'absolute', display: focus? 'block' : 'none', zIndex: 1000 }}>\n                <List>\n                    {data.map((val, i) => (\n                        <ListItem key={i} onClick={() => onSelect(val)} style={{cursor: 'pointer'}}>\n                            {val.title}\n                        </ListItem>\n                    ))}\n                </List>\n            </Paper>\n        </div>\n    )\n}\n\nexport default AutoComplete;","export const TMDB_KEY = '7cc441d4c80dc500e03786e94fd81402';\n","import React, { useEffect, useState } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { Card, CardContent, Button, CardActions } from \"@material-ui/core\";\nimport { TMDB_KEY } from \"../config\";\n  \n\nconst MovieBox = ({ movie, remove }) => {\n\n    const [ src, setSrc ] = useState('')\n\n    useEffect(() => {\n        async function fetchPoster() {\n            const res = await fetch(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=${TMDB_KEY}&language=en-US`);\n            const body = await res.json();\n            setSrc(body['poster_path']);\n        }\n        fetchPoster();\n    })\n\n    return (\n        \n            <Card style={{display: 'flex', width: '100%'}}>\n                <Link to={`/movie/${movie.id}`}>\n                    <img src={`https://image.tmdb.org/t/p/original/${src}`}\n                        height={130} width={100} />\n                </Link>\n                <CardContent>\n                    <Link style={{width: '100%'}} to={`/movie/${movie.id}`}>\n                        {movie.title} <br/>\n                    </Link>\n                    {remove? <Button onClick={remove} size={'small'} style={{backgroundColor: 'red', color: 'white', margin: '1rem'}}>Remove</Button> : null }                        \n                </CardContent>         \n            </Card>\n    )\n}\n\nexport default MovieBox;","import React, { useState, useEffect } from 'react';\nimport { Container, Grid, List, ListItem } from '@material-ui/core';\nimport AutoComplete from '../Components/AutoComplete';\nimport MovieBox from '../Components/MovieBox';\n\nconst STORAGE_KEY = '_pickflix_storage';\n\nconst Home = () => {\n    const [ movieList, setMovieList ] = useState([]);\n    const [ myList, setMyList ] = useState(localStorage.getItem(STORAGE_KEY) ? JSON.parse(localStorage.getItem(STORAGE_KEY)) : []);\n    const [ recs, setRecs ] = useState([]);\n  \n    useEffect(() => {\n        async function getMovies() {\n            const res = await fetch('/movies');\n            const json = await res.json();\n            setMovieList(json)  \n        }\n        getMovies();\n    }, []);\n\n    useEffect(() => {\n        const fetchRecommendations = async () => {\n            if(myList.length === 0) return;\n\n            const res = await fetch('/recommendations', {\n                method: 'POST',\n                body: JSON.stringify({\n                    ids: myList.map(item => item.id)\n                }),\n                headers: {\n                    'Content-Type': 'application/json'\n                }\n            });\n            const body = await res.json();\n            setRecs(body['recommendations']);\n        }\n        fetchRecommendations();\n    }, [ myList ]);\n\n    useEffect(() => {\n        localStorage.setItem(STORAGE_KEY, JSON.stringify(myList));\n    }, [myList])\n\n    const handleSelect = (item) => {\n        setMyList([ item, ...myList ]);\n    }\n\n    const removeFromList = (item, list) => {\n        return list.filter(_item => _item != item);\n    }\n\n    if(movieList.length == 0) {\n        return <span>Loading...</span>;\n    }\n    return (\n        <Grid container spacing={2}>\n            <Grid item xs={12}>\n                <Container style={{padding: '2rem'}}>\n                    <AutoComplete data={movieList} onSelect={handleSelect} />\n                </Container>\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <Container>\n                    <h1>My List</h1>\n                    <List>\n                        {myList.map((item, i) => (\n                            <ListItem key={i}>\n                                <MovieBox movie={item} remove={() => setMyList(removeFromList(item, myList))} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Container>\n            </Grid>\n            <Grid item xs={12} md={6}>\n                <Container>\n                    <h1>Recommendations</h1>\n                    <List>\n                        {recs.slice(0, 10).map((item, i) => (\n                            <ListItem key={i}>\n                                <MovieBox movie={item} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Container>\n            </Grid>\n        </Grid>\n    )\n}\n\nexport default Home;","import React, { useState, useEffect } from \"react\";\nimport { Container, Paper } from \"@material-ui/core\";\nimport { TMDB_KEY } from \"../config\";\nimport MovieBox from \"../Components/MovieBox\";\n\nconst Movie = ({ match }) => {\n\n    const [ recs, setRecs ] = useState([]);\n    const [ movie, setMovie ] = useState({});\n    const [ poster, setPoster ] = useState('');\n  \n    const { id } = match.params;\n  \n    useEffect(() => {\n        \n        async function fetchMovie() {\n            const res = await fetch(`/recommendations/${id}`)\n            const json = await res.json();\n            setMovie(json['movie'])\n            setRecs(json['recommendations']);\n        }\n        fetchMovie();\n\n        async function fetchPoster() {\n            const res = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${TMDB_KEY}&language=en-US`);\n            const json = await res.json();\n            const poster = json['poster_path'];\n            setPoster(poster);\n            }\n            fetchPoster();\n\n    }, [])\n  \n    if (recs.length == 0) {\n      return <span>Loading...</span>\n    }\n    return (\n      <div style={{\n          backgroundImage: `url(\"https://image.tmdb.org/t/p/original${poster}?api_key=${TMDB_KEY}\")`,\n          height: '100vh',\n          padding: 0\n        }}>\n        <Container maxWidth='md'>\n          <Paper style={{padding: '1rem'}}>\n            <h1>Top Recommendations For: {movie['title']}</h1>\n            <div style={{overflow: 'scroll', height: '50vh'}}>\n            {\n              recs.map((rec, i) => (\n                <MovieBox movie={rec} />\n              ))\n            }\n            </div>\n          </Paper>\n        </Container>\n      </div>\n    );\n}\n\nexport default Movie;","import React from 'react';\n\nconst Layout = ({ children }) => {\n    return (\n        <>\n            <div style={{backgroundColor: 'black', width: '100%'}}>\n                <img src='/title.png' height={150} width={400} />\n            </div>\n            {children}\n        </>\n    )\n}\n\nexport default Layout;","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from './Pages/Home';\nimport Movie from './Pages/Movie';\nimport Layout from './Components/Layout'\n\nconst App = () => {\n  return (\n    <Layout>\n      <Router>\n        <Route path='/' exact component={Home} />\n        <Route path='/movie/:id' component={Movie} />\n      </Router>\n    </Layout>\n  )\n}\n\nexport default App;\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}